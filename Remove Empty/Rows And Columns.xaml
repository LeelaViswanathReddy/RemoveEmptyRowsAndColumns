<Activity mc:Ignorable="sap sap2010" x:Class="RE_Rows_And_Columns" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="DataTable" Name="Input" Type="InArgument(sd:DataTable)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="DataTable" Name="Output" Type="OutArgument(sd:DataTable)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:Annotation.AnnotationText>Removes Empty Rows and Empty Columns in a DataTable.</sap2010:Annotation.AnnotationText>
  <sap:VirtualizedContainerService.HintSize>1108,803.2</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>RE_Rows_And_Columns_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="22">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="16">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="RE Rows And Columns" sap:VirtualizedContainerService.HintSize="1088,743.2" sap2010:WorkflowViewState.IdRef="Flowchart_1" ValidateUnconnectedNodes="True">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:Int32" Name="rowCount" />
      <Variable x:TypeArguments="x:Int32" Name="columnCount" />
      <Variable x:TypeArguments="x:String" Default="No Rows found, DataTable should have atleast one Column" Name="nullReferenceString" />
      <Variable x:TypeArguments="x:Int32" Name="emptyCounter" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="initialEmptyCounter" />
      <Variable x:TypeArguments="x:Int32" Name="columnIndexValue" />
      <Variable x:TypeArguments="sd:DataTable" Name="tempDataTable" />
      <Variable x:TypeArguments="x:Int32" Name="rowIndexValue" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">10,2.4</av:Point>
        <av:Size x:Key="ShapeSize">60,75.2</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">70,40 210,40 210,80</av:PointCollection>
        <x:Double x:Key="Width">1054.4</x:Double>
        <x:Double x:Key="Height">706.4</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID6</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID6">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">78.8,80</av:Point>
          <av:Size x:Key="ShapeSize">262.4,88</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">341.2,124 520,124 520,140</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap2010:Annotation.AnnotationText="Inilise rowCount." DisplayName="rowCount" sap:VirtualizedContainerService.HintSize="262.4,88" sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">[rowCount]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">[Input.Rows.Count]</InArgument>
        </Assign.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Assign>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID0">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">388.8,140</av:Point>
              <av:Size x:Key="ShapeSize">262.4,88</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">388.8,184 287.2,184 287.2,216.4</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap2010:Annotation.AnnotationText="Inilise columnCount." DisplayName="columnCount" sap:VirtualizedContainerService.HintSize="262.4,88" sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[columnCount]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">[Input.Columns.Count]</InArgument>
            </Assign.Value>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Assign>
          <FlowStep.Next>
            <FlowDecision x:Name="__ReferenceID1" sap2010:Annotation.AnnotationText="Check if DataTable have atleast one column.&#xA;" Condition="[rowCount = 0 Or columnCount = 0]" DisplayName="Row Or Column Empty" sap:VirtualizedContainerService.HintSize="140,163.2" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <av:Point x:Key="ShapeLocation">217.2,216.4</av:Point>
                  <av:Size x:Key="ShapeSize">140,163.2</av:Size>
                  <av:PointCollection x:Key="TrueConnector">217.2,298 100,298 100,348.8</av:PointCollection>
                  <x:String x:Key="TrueLabel">No Rows and Columns</x:String>
                  <av:PointCollection x:Key="FalseConnector">357.2,298 490,298 490,333.6</av:PointCollection>
                  <x:String x:Key="FalseLabel">Rows and Columns</x:String>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <FlowDecision.True>
                <FlowStep x:Name="__ReferenceID2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">0,348.8</av:Point>
                      <av:Size x:Key="ShapeSize">200,50.4</av:Size>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Throw sap2010:Annotation.AnnotationText="Set Null Reference Exception." DisplayName="Null Reference" Exception="[New System.NullReferenceException(nullReferenceString)]" sap:VirtualizedContainerService.HintSize="200,50.4" sap2010:WorkflowViewState.IdRef="Throw_1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Throw>
                </FlowStep>
              </FlowDecision.True>
              <FlowDecision.False>
                <FlowStep x:Name="__ReferenceID3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">390,333.6</av:Point>
                      <av:Size x:Key="ShapeSize">200,112.8</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">490,446.4 490,480</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ForEach x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="For each loop with input DataTable to removes Empty Columns." CurrentIndex="[columnIndexValue]" DisplayName="Remove Empty Columns" sap:VirtualizedContainerService.HintSize="200,112.8" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Enumerable.Range(1,columnCount)]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:Int32">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:Int32" Name="dataColumn" />
                        </ActivityAction.Argument>
                        <Sequence sap2010:Annotation.AnnotationText="For Each loop for Rows." DisplayName="For each Column Body" sap:VirtualizedContainerService.HintSize="616,1191.2" sap2010:WorkflowViewState.IdRef="Sequence_4">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:Int32" Name="rowIndexValue" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap2010:Annotation.AnnotationText="Inilise emptyCounter, Initially it is set to 0." DisplayName="emptyCounter" sap:VirtualizedContainerService.HintSize="574.4,88" sap2010:WorkflowViewState.IdRef="Assign_3">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[emptyCounter]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">[initialEmptyCounter]</InArgument>
                            </Assign.Value>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Assign>
                          <ui:ForEachRow sap2010:Annotation.AnnotationText="For Each loop for Rows." CurrentIndex="[rowIndexValue]" DataTable="[Input]" DisplayName="For each Rows" sap:VirtualizedContainerService.HintSize="574.4,600" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                            <ui:ForEachRow.Body>
                              <ActivityAction x:TypeArguments="sd:DataRow">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="dataRow" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="For each data Row" sap:VirtualizedContainerService.HintSize="524.8,423.2" sap2010:WorkflowViewState.IdRef="Sequence_2">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If Condition="[Not String.IsNullOrEmpty(dataRow.Item(columnIndexValue).ToString.Trim )]" DisplayName="Check if column value has length" sap:VirtualizedContainerService.HintSize="483.2,330.4" sap2010:WorkflowViewState.IdRef="If_1">
                                    <If.Else>
                                      <Sequence DisplayName="Increment empty counter" sap:VirtualizedContainerService.HintSize="304,180.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap2010:Annotation.AnnotationText="Increment EmotyCounter." DisplayName="emptyCounter" sap:VirtualizedContainerService.HintSize="262.4,88" sap2010:WorkflowViewState.IdRef="Assign_4">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Int32">[emptyCounter]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Int32">[emptyCounter + 1]</InArgument>
                                          </Assign.Value>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </Assign>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEachRow.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ForEachRow>
                          <If Condition="[emptyCounter.ToString.Trim.Equals(rowCount.ToString.Trim)]" DisplayName="Check if EmptyCounter is equal to Row count" sap:VirtualizedContainerService.HintSize="574.4,302.4" sap2010:WorkflowViewState.IdRef="If_2">
                            <If.Then>
                              <Sequence DisplayName="Empty Columns" sap:VirtualizedContainerService.HintSize="375.2,152.8" sap2010:WorkflowViewState.IdRef="Sequence_3">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:FilterDataTable DataTable="[Input]" DisplayName="Filter to remove columns" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[tempDataTable]" SelectColumnsMode="Remove">
                                  <ui:FilterDataTable.Filters>
                                    <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                      <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                                    </scg:List>
                                  </ui:FilterDataTable.Filters>
                                  <ui:FilterDataTable.SelectColumns>
                                    <scg:List x:TypeArguments="InArgument" Capacity="4">
                                      <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(columnIndexValue)]</InArgument>
                                    </scg:List>
                                  </ui:FilterDataTable.SelectColumns>
                                </ui:FilterDataTable>
                              </Sequence>
                            </If.Then>
                          </If>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEach>
                  <FlowStep.Next>
                    <FlowStep x:Name="__ReferenceID4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">358.8,480</av:Point>
                          <av:Size x:Key="ShapeSize">262.4,88</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">490,568 490,593.6</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap2010:Annotation.AnnotationText="Inilise Output DataTable." DisplayName="OutputDataTable" sap:VirtualizedContainerService.HintSize="262.4,88" sap2010:WorkflowViewState.IdRef="Assign_5">
                        <Assign.To>
                          <OutArgument x:TypeArguments="sd:DataTable">[Output]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="sd:DataTable">[tempDataTable.Clone()]</InArgument>
                        </Assign.Value>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Assign>
                      <FlowStep.Next>
                        <FlowStep x:Name="__ReferenceID5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">390,593.6</av:Point>
                              <av:Size x:Key="ShapeSize">200,112.8</av:Size>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ForEachRow sap2010:Annotation.AnnotationText="For each loop with input DataTable to removes Empty Rows." CurrentIndex="[rowIndexValue]" DataTable="[tempDataTable]" DisplayName="Remove Empty Rows by for each" sap:VirtualizedContainerService.HintSize="200,112.8" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                            <ui:ForEachRow.Body>
                              <ActivityAction x:TypeArguments="sd:DataRow">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="dataRow" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="For each row Body" sap:VirtualizedContainerService.HintSize="601.6,1249.6" sap2010:WorkflowViewState.IdRef="Sequence_8">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap2010:Annotation.AnnotationText="Inilise emptyCounter, Initially it is set to 0." sap:VirtualizedContainerService.HintSize="560,88" sap2010:WorkflowViewState.IdRef="Assign_6">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int32">[emptyCounter]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int32">[initialEmptyCounter]</InArgument>
                                    </Assign.Value>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Assign>
                                  <ui:ForEach x:TypeArguments="x:Object" sap2010:Annotation.AnnotationText="For Each loop for Columns." CurrentIndex="[columnIndexValue]" DisplayName="For Each DataColumn" sap:VirtualizedContainerService.HintSize="560,585.6" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[Enumerable.Range(1,tempDataTable.Columns.Count)]">
                                    <ui:ForEach.Body>
                                      <ActivityAction x:TypeArguments="x:Object">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="x:Object" Name="dataColumn" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="For each Column Body" sap:VirtualizedContainerService.HintSize="524.8,423.2" sap2010:WorkflowViewState.IdRef="Sequence_6">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If Condition="[dataRow.Item(columnIndexValue).ToString.Trim.Length = 0]" DisplayName="Check If length of datarow greater then 0" sap:VirtualizedContainerService.HintSize="483.2,330.4" sap2010:WorkflowViewState.IdRef="If_3">
                                            <If.Then>
                                              <Sequence DisplayName="Increment Counter" sap:VirtualizedContainerService.HintSize="304,180.8" sap2010:WorkflowViewState.IdRef="Sequence_5">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign sap2010:Annotation.AnnotationText="Inilise emptyCounter." DisplayName="emptyCounter" sap:VirtualizedContainerService.HintSize="262.4,88" sap2010:WorkflowViewState.IdRef="Assign_7">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[emptyCounter]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[emptyCounter+1]</InArgument>
                                                  </Assign.Value>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </Assign>
                                              </Sequence>
                                            </If.Then>
                                          </If>
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:ForEach.Body>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:ForEach>
                                  <If Condition="[emptyCounter = tempDataTable.Columns.Count]" DisplayName="Check If counter and column equals" sap:VirtualizedContainerService.HintSize="560,403.2" sap2010:WorkflowViewState.IdRef="If_4">
                                    <If.Else>
                                      <Sequence DisplayName="Filled Rows" sap:VirtualizedContainerService.HintSize="278.4,253.6" sap2010:WorkflowViewState.IdRef="Sequence_7">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <InvokeMethod sap2010:Annotation.AnnotationText="Import Rows with Data Only." DisplayName="Imports Filled Row" sap:VirtualizedContainerService.HintSize="236.8,160.8" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="ImportRow">
                                          <InvokeMethod.TargetObject>
                                            <InArgument x:TypeArguments="sd:DataTable">[Output]</InArgument>
                                          </InvokeMethod.TargetObject>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <InArgument x:TypeArguments="sd:DataRow">[dataRow]</InArgument>
                                        </InvokeMethod>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEachRow.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ForEachRow>
                        </FlowStep>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowStep.Next>
                </FlowStep>
              </FlowDecision.False>
            </FlowDecision>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
  </Flowchart>
</Activity>